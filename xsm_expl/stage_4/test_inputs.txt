// Bubblesort
begin
decl
   int n,arr[50],i,j,dup;
enddecl
read(n);
i=0;
while(i<n) do
    read(arr[i]);
    i = i+1;
endwhile;
i=0;
while(i<n) do
    j=i;
    while(j<n) do
        if(arr[i]>arr[j]) then
            dup = arr[i];
            arr[i] = arr[j];
            arr[j] = dup;
        endif;
        j = j + 1;
    endwhile;
    i = i+1;
endwhile;
i=0;
while(i<n) do
    write(arr[i]);
    i = i+1;
endwhile;
end;

// Nth Fibonacci
begin
decl
    int n,f2,f0,f1,i;
enddecl
read(n);
if(n>=2) then
    f0=0;
    f1=1;
    n=n-1;
    while(n!=0) do
        f2=f1+f0;
        f0=f1;
        f1=f2;
        n=n-1;
    endwhile;
    write(f1);
else if(n==1) then
        write(1);
    else write(0);
    endif;
endif;
end;

// is Prime
begin
decl
    int n,i,j;
enddecl
    read(n);
    j=0;
    if(n%2==0) then
        j=1;
    else
        i=3;
        while(i<=n/2) do
            if(n%i==0) then
                j=1;
            endif;
            i=i+2;
        endwhile;
    endif;
    if(j==0) then
        write("Prime");
    else write("Not Prime");
    endif;
end;


// sum to n factorial
begin
decl
    int n,i,j,sum,k;
enddecl
    read(n);
    sum=0;
    k=1;
    while(k<=n)do
        if(n<=1) then
            sum=sum+1;
        else
            i=1;
            j=1;
            while(i<=k)do
                j=j*i;
                i=i+1;
            endwhile;
            sum=sum+j;
        endif;
        k=k+1;
    endwhile;
    write(sum);
end;


// compare three numbers and print the largest one
begin
    read(a);
    read(b);
    read(c);
    if (a < b) then
        if (b < c) then 
            write(c);
        else
            write(b);
        endif;
    else
        if (a < c) then
            write(c);
        else
            write(a);
        endif;
    endif;
end;




begin
    read(a);
    read(b);
    while(a>0) do
        write(a);
        while(b>0) do
            write(b);
            b=b-1;
        endwhile;
        b=a;
        a=a-1;
    endwhile;
end;


begin
    read(a);
    read(b);
    while(a>0) do

        write(a);
        c = 1;
        while(b>0) do
            write(b);
            if(c==0) then 

                break;
            endif;
            c=0;
            b=b-1;
        endwhile;
        a=a-1;
    endwhile;
end;


begin
    read(a);
   

    repeat
        breakpoint;
        write(a);
        breakpoint;
        a = a - 1;
    until (a > 0);

end;